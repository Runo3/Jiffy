@page "/"
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))

@using Microsoft.AspNetCore.Authorization

@attribute [Authorize]


<PageTitle>Time</PageTitle>

<AuthorizeView>
	@if(ActivitySource.IsLoaded)
	{
		
		<div class="timepage-body">
			<div class="centered-div-flex">
				<RoundButton OnClick="ToggleClock" Started="@Started" Disabled="@Disabled" />
			</div>


			@if (ActivitySource != null && !Started)
			{
				<div class="centered-div-flex">
					<select class="activity-select toprounded" @bind="ActivityTitleSelect">
						<option>@NEW_ACTIVITY_TITLE</option>
						<option>Krank</option>
						@foreach (var Activity in ActivitySource.GetActivityTitles().OrderByDescending(e => e.Favorite))
						{
							<option value="@Activity.Value">
								<div style="width: 100%;">
									@if (Activity.Favorite)
									{
										<p>&starf; </p>
									}
									<p>@Activity.Value</p>
								</div>
							</option>
						}
					</select>
				</div>

				<TextField Style="height: 45px;" Class="@(ActivityTitleSelect.Equals(NEW_ACTIVITY_TITLE) ? "textfield activity-textfield" : "invisible")" PlaceHolder="Activity Title..." @bind-Value="@ActivityTitle" Multiline="false" />

				<div class="centered-div-flex">
					<select @bind="ActivityDescriptionSelect" class="activity-select @(ActivityDescriptionSelect.Equals(NEW_ACTIVITY_DESCRIPTION) ? "" : "bottomrounded")">
						<option>@NEW_ACTIVITY_DESCRIPTION</option>
						@foreach (var Activity in ActivitySource.GetActivityDescriptions().OrderByDescending(e => e.Favorite))
						{
							<option value="@Activity.Value">
								<div style="width: 100%;">
									@if (Activity.Favorite)
									{
										<p>&starf; </p>
									}
									<p>@Activity.Value</p>
								</div>
							</option>
						}
					</select>
				</div>

				<TextField Style="height: 90px;" Class="@(ActivityDescriptionSelect.Equals(NEW_ACTIVITY_DESCRIPTION) ? "textfield activity-textfield bottomrounded" : "invisible")" PlaceHolder="Activity Description..." @bind-Value="@ActivityDescription" Multiline="true" />

			}
			else
			{
				<div class="text-passed-time">@PassedTime.ToString(@"hh\:mm\:ss")</div>
			}
		</div>
	}
	else
	{
		<div class="vertical-center">
			<div class="centered-div-flex">
				<div class="loader">
					<div class="box box-1">
						<div class="side-left"></div>
						<div class="side-right"></div>
						<div class="side-top"></div>
					</div>
					<div class="box box-2">
						<div class="side-left"></div>
						<div class="side-right"></div>
						<div class="side-top"></div>
					</div>
					<div class="box box-3">
						<div class="side-left"></div>
						<div class="side-right"></div>
						<div class="side-top"></div>
					</div>
					<div class="box box-4">
						<div class="side-left"></div>
						<div class="side-right"></div>
						<div class="side-top"></div>
					</div>
				</div>
			</div>
		</div>
	}
	
</AuthorizeView>

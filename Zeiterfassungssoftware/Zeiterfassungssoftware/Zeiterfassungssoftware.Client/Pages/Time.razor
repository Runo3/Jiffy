@page "/Time"
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))

@using Microsoft.AspNetCore.Authorization

@implements IDisposable
@inject ITimeEntryProvider TimeEntrySource
@inject IActivityProvider ActivitySource

@attribute [Authorize]


<PageTitle>Time</PageTitle>

<AuthorizeView>
	
	<div style="display: flex; align-content: center; justify-content: center; flex-direction: column; height: 100%;">
		<div class="centered-div-flex">
			<RoundButton OnClick="ToggleClock" Started="@Started" Disabled="@Disabled" />
		</div>


		@if (!Started)
		{
			<div class="centered-div-flex">
				<select class="toprounded" @bind="ActivityTitleSelect">
					<option>@NEW_ACTIVITY_TITLE</option>
					@foreach (var Activity in ActivitySource.GetActivityTitles())
					{
						<option value="@Activity.Value">@Activity.Value</option>
					}
				</select>
			</div>

			<TextField style="width: 40%; height: 45px;" Class="@(ActivityTitleSelect.Equals(NEW_ACTIVITY_TITLE) ? "textfield activity-textfield" : "invisible")" PlaceHolder="Activity Title..." @bind-Value="@ActivityTitle" Multiline="false" />

			<div class="centered-div-flex">
				<select @bind="ActivityDescriptionSelect" class="@(ActivityDescriptionSelect.Equals(NEW_ACTIVITY_DESCRIPTION) ? "" : "bottomrounded")">
					<option>@NEW_ACTIVITY_DESCRIPTION</option>
					@foreach (var Activity in ActivitySource.GetActivityDescriptions())
					{
						<option value="@Activity.Value">@Activity.Value</option>
					}
				</select>
			</div>

			<TextField style="width: 40%; height: 45px;" Class="@(ActivityDescriptionSelect.Equals(NEW_ACTIVITY_DESCRIPTION) ? "textfield activity-textfield bottomrounded" : "invisible")" PlaceHolder="Activity Description..." @bind-Value="@ActivityDescription" Multiline="true" />

		}
		else
		{
			<div class="text-passed-time">@PassedTime.ToString(@"hh\:mm\:ss")</div>
		}
	</div>
</AuthorizeView>
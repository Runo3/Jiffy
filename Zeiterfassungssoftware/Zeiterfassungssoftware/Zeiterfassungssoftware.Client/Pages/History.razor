@page "/history"
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))

@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]

<PageTitle>New History</PageTitle>


<AuthorizeView>
    <div class="history-page-body">
        <div class="info-body">
            <div class="flex-div-nowrap info-widgets">
                <Widget Title="Overtime" Text=@(Overtime.TotalHours < 1 ? $"{Math.Floor(Overtime.TotalMinutes)}min" : $"{Math.Floor(Overtime.TotalHours)}h") />
                <Widget Title="Sick days" Text=@($"{Sickdays}") />
            </div>
            <div class="history-filter-container">
                <div class="history-filter-title" @onclick="() => ShowFilters = !ShowFilters">
                    <p>Filter setting</p>
                    <p class="extended-arrow">@(ShowFilters ? "▲" : "▼")</p>
                </div>

                <div class="history-filter-settings history-filter-display-@(ShowFilters ? "block" : "none")">
                    <div class="flex-div-wrap">
                        @foreach (IFilter Filter in Filters.OrderByDescending(e => e.Enabled))
                        {
                            @if (!context.User.IsInRole("Administrator") && string.Equals(Filter.Name, "Username"))
                                continue;

                            <p @onclick="() => OnFilterClicked(Filter)" class="filter-control-element @(Filter.Enabled ? "filter-enabled" : "filter-disabled")">
                                @Filter.Name
                            </p>
                            <p class="filter-x" @onclick="() => {Filter.Enabled = false; Filter.PopUp = false;}">@(Filter.Enabled ? "🞩" : "")</p>
                        }
                    </div>

                </div>

                @if (SelectedFilter is not null)
                {
                    <FilterPopUp Filter="SelectedFilter" />
                }
            </div>
        </div>
        
        <div class="filter-dropdown-body">
        </div>
        <div class="entry-list-body">
            @if (TimeEntrySource.IsLoaded)
            {
                @foreach (var Entry in TimeEntrySource.GetEntries().Where(e => DoFiltersApply(e)))
                {
                    <HistoryEntry Entry="@Entry" ShowNames="@context.User.IsInRole("Administrator")" />
                }
            }
        </div>    
    </div>
</AuthorizeView>

